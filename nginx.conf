# ADD TO BOTTOM OF NGINX.CONF
# MUST HAVE NGINX COMPILED WITH RTMP MODULE & FFMPEG w x264 ENCODER.
# NOTE HAVE A GOOD CPU FOR TRANSCODING OR YOU WILL EXPERIENCE LAG / SKIPS - 
# IM USING INTEL CPU WITH 8 CORE 8 THREADS IN TRANSCODE BUT TWEAK IF NEEDED
# ENCODING WILL REENCODE THE SOURCE STREAM TO 720P and DROP BANDWIDTH TO 1800k FOR MOBILES.
# WHILE SENDING STREAM TO LIVEOUT. LIVEOUT WILL PUSH THE STREAM TO ANY PLATFORM THAT SUPPORTS RTMP
# RINSE AND REPEAT FOR LIVEOUT2 & LIVEOUT3

rtmp {
	server {
	
		listen 1935;
		chunk_size 4096;

		application livein {
		
			live on;

			## TURN STREAM SOURCE TO 720p
			exec ffmpeg -i "rtmp://127.0.0.1/livein/STREAM_KEY” -vb 1800k -minrate 1800k -maxrate 1800k -bufsize 1800k -s 1280×720 -c:v libx264 -preset faster -r 60 -g 120 -keyint_min 60 -x264opts “keyint=120:min-keyint=120:no-scenecut” -sws_flags lanczos -tune film -pix_fmt yuv420p -c:a copy -f flv -threads 8 -strict normal “rtmp://127.0.0.1/liveout/STREAM_KEY"
			# COPY TO LIVEOUT2
			-c:v libx264 -preset faster -r 60 -g 120 -keyint_min 60 -x264opts “keyint=120:min-keyint=120:no-scenecut” -sws_flags lanczos -tune film -pix_fmt yuv420p -c:a copy -f flv -threads 8 -strict normal “rtmp://127.0.0.1/liveout2/STREAM_KEY"
			# COPY TO LIVEOUT3				
			-c:v libx264 -preset faster -r 60 -g 120 -keyint_min 60 -x264opts “keyint=120:min-keyint=120:no-scenecut” -sws_flags lanczos -tune film -pix_fmt yuv420p -c:a copy -f flv -threads 8 -strict normal “rtmp://127.0.0.1/liveout3/STREAM_KEY";

			record_path /your/path;

			recorder allin {
				record all;
				record_suffix -allin-%F-%H-%M-%S.flv;
				record_interval 15m;
			}
			
		}
		## PUSH REENCODED STREAM OUT
		application liveout {
			live on;
			record off;
			push rtmp://TWITCH_ADDRESS;
		}
		## PUSH REENCODED STREAM OUT
		application liveout2 {
			live on;
			record off;
			push rtmp://YOUTUBE_ADDRESS;
		}
		## PUSH REENCODED STREAM OUT
		application liveout3 {
			live on;
			record off;
			push rtmp://RESTREAMIO_ADDRESS;
		}
	}
}
